spring.kafka.bootstrap-servers=kafka:9092
#Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.BytesDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.BytesDeserializer

#Consumer
#spring.kafka.consumer.bootstrap-servers=kafka:9092
#spring.kafka.consumer.group-id=party-consumer
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.properties.spring.deserializer.key-deserializer=org.springframework.kafka.support.serializer.BytesDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value-deserializer=org.springframework.kafka.support.serializer.BytesDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

#Postgres JPA
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://postgres:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

#Spring Cloud Streams
#spring.cloud.function.definition=partyProposed
spring.cloud.stream.default-binder=kafka
spring.cloud.stream.bindings.proposed-in-0.destination=dbserver1.party.party
spring.cloud.stream.bindings.proposed-in-0.group=party-consumer
spring.cloud.stream.kafka.binder.brokers=kafka:9092
spring.cloud.stream.bindings.default.consumer.use-native-decoding=true
spring.cloud.stream.kafka.bindings.default.consumer.start-offset=earliest
spring.cloud.stream.kafka.bindings.default.consumer.configuration.spring.deserializer.key-deserializer=org.springframework.kafka.support.serializer.BytesDeserializer
spring.cloud.stream.kafka.bindings.default.consumer.configuration.spring.deserializer.value-deserializer=org.springframework.kafka.support.serializer.BytesDeserializer
spring.cloud.stream.kafka.bindings.default.consumer.configuration.spring.json.trusted.packages=*


#spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
#spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.springframework.kafka.support.serializer.BytesDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.BytesDeserializer