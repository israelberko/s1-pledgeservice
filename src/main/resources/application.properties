logging.level.root=INFO
logging.level.org.springframework= INFO
logging.level.org= INFO
logging.level.org.apache.kafka= OFF
server.port=8101

#spring.kafka.bootstrap-servers=localhost:29092
##Producer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.BytesSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.BytesSerializer
#spring.kafka.producer.bootstrap-servers=localhost:29092
#
##Consumer
#spring.kafka.consumer.bootstrap-servers=localhost:29092
#spring.kafka.consumer.group-id=donor-consumer
#spring.kafka.consumer.auto-offset-reset=earliest
##spring.kafka.consumer.properties.spring.deserializer.key-deserializer=org.springframework.kafka.support.serializer.BytesDeserializer
##spring.kafka.consumer.properties.spring.deserializer.value-deserializer=org.springframework.kafka.support.serializer.BytesDeserializer
#spring.kafka.consumer.properties.spring.deserializer.key-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

#Postgres JPA
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://postgres:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

#Spring Cloud Streams
spring.cloud.stream.default-binder=kafka
#PledgeBinder
spring.cloud.stream.bindings.pledgeRequested-out-0.destination=dbserver1.pledge.pledge_outbox.test
spring.cloud.stream.bindings.pledgeRequested-out-0.group=pledge-consumer-test
spring.cloud.stream.bindings.pledgeRequested-in-0.destination=dbserver1.pledge.pledge_outbox.test
spring.cloud.stream.bindings.pledgeRequested-in-0.group=new-pledge-consumer-test

#PledgeBinder-second group
spring.cloud.stream.bindings.pledgeRequested-out-1.destination=dbserver1.pledge.pledge_outbox.test
spring.cloud.stream.bindings.pledgeRequested-out-1.group=pledge-consumer-test
spring.cloud.stream.bindings.pledgeRequested-in-1.destination=dbserver1.pledge.pledge_outbox.test
spring.cloud.stream.bindings.pledgeRequested-in-1.group=pledge-consumer-test


spring.cloud.stream.kafka.binder.brokers=localhost:29092
spring.cloud.stream.bindings.default.consumer.use-native-decoding=true
spring.cloud.stream.kafka.bindings.default.consumer.start-offset=earliest
spring.cloud.stream.kafka.bindings.default.consumer.configuration.spring.serializer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.bindings.default.consumer.configuration.spring.serializer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.bindings.default.consumer.configuration.spring.deserializer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.bindings.default.consumer.configuration.spring.deserializer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.bindings.default.consumer.configuration.spring.json.trusted.packages=*


#spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
#spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.springframework.kafka.support.serializer.BytesDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.BytesDeserializer